/* Auto-generated by genmsg_cpp for file /Users/rimesime/ros/fu_tools/waypoint/srv/RecordTrack.srv */
#ifndef WAYPOINT_SERVICE_RECORDTRACK_H
#define WAYPOINT_SERVICE_RECORDTRACK_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace waypoint
{
template <class ContainerAllocator>
struct RecordTrackRequest_ : public ros::Message
{
  typedef RecordTrackRequest_<ContainerAllocator> Type;

  RecordTrackRequest_()
  : name()
  {
  }

  RecordTrackRequest_(const ContainerAllocator& _alloc)
  : name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  name;


private:
  static const char* __s_getDataType_() { return "waypoint/RecordTrackRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "c1f3d28f1b044c871e6eff2e9fc3c667"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "724f1e84629fbfec0fd754ee0937a6c2"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string name\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(name);
    return size;
  }

  typedef boost::shared_ptr< ::waypoint::RecordTrackRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::waypoint::RecordTrackRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct RecordTrackRequest
typedef  ::waypoint::RecordTrackRequest_<std::allocator<void> > RecordTrackRequest;

typedef boost::shared_ptr< ::waypoint::RecordTrackRequest> RecordTrackRequestPtr;
typedef boost::shared_ptr< ::waypoint::RecordTrackRequest const> RecordTrackRequestConstPtr;


template <class ContainerAllocator>
struct RecordTrackResponse_ : public ros::Message
{
  typedef RecordTrackResponse_<ContainerAllocator> Type;

  RecordTrackResponse_()
  : nameWasValid(false)
  {
  }

  RecordTrackResponse_(const ContainerAllocator& _alloc)
  : nameWasValid(false)
  {
  }

  typedef uint8_t _nameWasValid_type;
  uint8_t nameWasValid;


private:
  static const char* __s_getDataType_() { return "waypoint/RecordTrackResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "052415d96d2421b5dc9f82687c6e497f"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "724f1e84629fbfec0fd754ee0937a6c2"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool nameWasValid\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, nameWasValid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, nameWasValid);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(nameWasValid);
    return size;
  }

  typedef boost::shared_ptr< ::waypoint::RecordTrackResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::waypoint::RecordTrackResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct RecordTrackResponse
typedef  ::waypoint::RecordTrackResponse_<std::allocator<void> > RecordTrackResponse;

typedef boost::shared_ptr< ::waypoint::RecordTrackResponse> RecordTrackResponsePtr;
typedef boost::shared_ptr< ::waypoint::RecordTrackResponse const> RecordTrackResponseConstPtr;

struct RecordTrack
{

typedef RecordTrackRequest Request;
typedef RecordTrackResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct RecordTrack
} // namespace waypoint

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::waypoint::RecordTrackRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1f3d28f1b044c871e6eff2e9fc3c667";
  }

  static const char* value(const  ::waypoint::RecordTrackRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1f3d28f1b044c87ULL;
  static const uint64_t static_value2 = 0x1e6eff2e9fc3c667ULL;
};

template<class ContainerAllocator>
struct DataType< ::waypoint::RecordTrackRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "waypoint/RecordTrackRequest";
  }

  static const char* value(const  ::waypoint::RecordTrackRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::waypoint::RecordTrackRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string name\n\
\n\
";
  }

  static const char* value(const  ::waypoint::RecordTrackRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::waypoint::RecordTrackResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "052415d96d2421b5dc9f82687c6e497f";
  }

  static const char* value(const  ::waypoint::RecordTrackResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x052415d96d2421b5ULL;
  static const uint64_t static_value2 = 0xdc9f82687c6e497fULL;
};

template<class ContainerAllocator>
struct DataType< ::waypoint::RecordTrackResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "waypoint/RecordTrackResponse";
  }

  static const char* value(const  ::waypoint::RecordTrackResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::waypoint::RecordTrackResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool nameWasValid\n\
\n\
\n\
";
  }

  static const char* value(const  ::waypoint::RecordTrackResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::waypoint::RecordTrackResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::waypoint::RecordTrackRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RecordTrackRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::waypoint::RecordTrackResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.nameWasValid);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RecordTrackResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<waypoint::RecordTrack> {
  static const char* value() 
  {
    return "724f1e84629fbfec0fd754ee0937a6c2";
  }

  static const char* value(const waypoint::RecordTrack&) { return value(); } 
};

template<>
struct DataType<waypoint::RecordTrack> {
  static const char* value() 
  {
    return "waypoint/RecordTrack";
  }

  static const char* value(const waypoint::RecordTrack&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<waypoint::RecordTrackRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "724f1e84629fbfec0fd754ee0937a6c2";
  }

  static const char* value(const waypoint::RecordTrackRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<waypoint::RecordTrackRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "waypoint/RecordTrack";
  }

  static const char* value(const waypoint::RecordTrackRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<waypoint::RecordTrackResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "724f1e84629fbfec0fd754ee0937a6c2";
  }

  static const char* value(const waypoint::RecordTrackResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<waypoint::RecordTrackResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "waypoint/RecordTrack";
  }

  static const char* value(const waypoint::RecordTrackResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // WAYPOINT_SERVICE_RECORDTRACK_H

